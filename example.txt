<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Study Room - BrainWave</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    
    <!-- CSS IMPLEMENTATION -->
    @vite(['resources/css/style.css'])

    <style>
        body {
            background-color: #0d1117;
            color: white;
            font-family: 'Segoe UI', sans-serif;
        }

        .study-room {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            padding: 40px 20px;
            margin-top: 2rem;
        }

        .study-card {
            background-color: #161b22;
            border: 2px solid #30363d;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.05);
            position: relative;
            transition: transform 0.3s ease;
        }

        /* .study-card:hover {
      transform: translateY(-5px);
    } */
        .card-header {
            position: relative;
            height: 180px;
            background: #0d1117;
        }

        .card-header video,
        .card-header .shimmer {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 20px 20px 0 0;
        }

        .card-header .live-dot {
            position: absolute;
            top: 10px;
            left: 10px;
            width: 12px;
            height: 12px;
            background-color: #2ecc71;
            border-radius: 50%;
            box-shadow: 0 0 8px #2ecc71;
        }

        .card-body {
            padding: 15px;
        }

        .emoji-bar {
            display: flex;
            gap: 10px;
            padding: 10px;
            justify-content: center;
        }

        .emoji-bar button {
            background: transparent;
            border: none;
            font-size: 20px;
            cursor: pointer;
            transition: transform 0.2s;
        }

        /* .emoji-bar button:hover {
      transform: scale(1.3);
    } */
        .emoji-float {
            position: absolute;
            bottom: 50px;
            left: 50%;
            font-size: 24px;
            animation: floatUp 1s ease-out forwards;
            opacity: 0;
        }

        @keyframes floatUp {
            0% {
                transform: translateX(-50%) translateY(0);
                opacity: 1;
            }

            100% {
                transform: translateX(-50%) translateY(-100px);
                opacity: 0;
            }
        }

        .options-menu {
            position: absolute;
            bottom: 20px;
            right: 20px;
        }

        .options-dropdown {
            position: absolute;
            right: 0;
            bottom: 40px;
            background-color: #21262d;
            border: 1px solid #30363d;
            border-radius: 10px;
            display: none;
            flex-direction: column;
            z-index: 99;
        }

        .options-dropdown a {
            color: white;
            padding: 10px 15px;
            text-decoration: none;
            border-bottom: 1px solid #30363d;
        }

        .options-dropdown a:last-child {
            border-bottom: none;
        }

        .three-dot {
            font-size: 18px;
            color: white;
            background: transparent;
            border: none;
            cursor: pointer;
        }

        .shimmer {
            background: linear-gradient(90deg, #1e1e1e 25%, #2e2e2e 50%, #1e1e1e 75%);
            background-size: 400% 100%;
            animation: shimmer 1.2s ease-in-out infinite;
        }

        @keyframes shimmer {
            0% {
                background-position: -400% 0;
            }

            100% {
                background-position: 400% 0;
            }
        }

        .h1{
            color: white;
            margin: 5rem 0rem 2rem 30%;
        }

        .footer {
        background-image: url('{{ asset('image/cloudy_footerbg.svg') }}');
        background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    }
    </style>
</head>

<body>

<nav class="navbar navbar-expand-lg navbar-dark fixed-top">
        <div class="container">
            <a class="navbar-brand" href="#">BrainWave</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link active" href="{{ url('/index') }}">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#features">Features</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#explore">Explore</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#contact">Contact</a>
                    </li>
                </ul>
                <!-- Theme Toggle Button -->
                <button id="theme-toggle" class="btn btn-outline-light ms-3" title="Toggle Dark/Light Theme">
                    <i class="fas fa-moon" id="theme-icon"></i>
                </button>
                <a href="{{ url('/study-room') }}" class="btn btn-join ms-3">Join Now</a>
            </div>
        </div>
    </nav>

    <div><h1 class="h1">LIVE- STUDY WITH PUBIC </h1> </div>

    <section class="study-room" id="studyRoom"> </section>
    <!-- Report Modal -->
    <div class="modal fade" id="reportModal" tabindex="-1" aria-labelledby="reportModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-dark text-white border-0 rounded-4">
                <div class="modal-header border-0">
                    <h5 class="modal-title" id="reportModalLabel">Report User</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="reportForm">
                        <div class="mb-3">
                            <label for="reason" class="form-label">Reason</label>
                            <select class="form-select bg-dark text-white border-secondary" id="reason" required>
                                <option value="">Select a reason</option>
                                <option>Inappropriate Behavior</option>
                                <option>Spamming</option>
                                <option>Fake Identity</option>
                                <option>Other</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="details" class="form-label">Additional Comments</label>
                            <textarea class="form-control bg-dark text-white border-secondary" id="details" rows="3" placeholder="Write your message..."></textarea>
                        </div>
                        <button type="submit" class="btn btn-danger w-100">Submit Report</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <!-- Footer Section -->
    <footer class="footer  text-white py-5">
        <div class="container">
            <div class="row text-center text-md-start">
                <!-- Quick Links -->
                <div class="col-md-4 mb-3">
                    <h5>Quick Links</h5>
                    <ul class="list-unstyled">
                        <li><a href="#home" class="text-white">Home</a></li>
                        <li><a href="#features" class="text-white">Features</a></li>
                        <li><a href="#explore" class="text-white">Explore</a></li>
                        <li><a href="#contact" class="text-white">Contact</a></li>
                    </ul>
                </div>

                <!-- Contact Info -->
                <div class="col-md-4 mb-3">
                    <h5>Contact Us</h5>
                    <p>Email: support@brainwave.com</p>
                    <p>Phone: +123 456 7890</p>
                    <p>Address: 123 Study Lane, Learning City</p>
                </div>

                <!-- Social Media -->
                <div class="col-md-4 mb-3">
                    <h5>Follow Us</h5>
                    <a href="#" class="social-icon"><i class="fab fa-facebook"></i></a>
                    <a href="#" class="social-icon"><i class="fab fa-twitter"></i></a>
                    <a href="#" class="social-icon"><i class="fab fa-instagram"></i></a>
                    <a href="#" class="social-icon"><i class="fab fa-linkedin"></i></a>
                </div>
            </div>

            <!-- Copyright -->
            <div class="text-center mt-3 pb">
                <p>&copy; 2025 BrainWave. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script>
        const cardsData = [{
                name: 'John Doe',
                topic: 'Algorithms',
                video: 'https://www.w3schools.com/html/mov_bbb.mp4'
            },
            {
                name: 'Jane Smith',
                topic: 'Data Science',
                video: 'https://www.w3schools.com/html/movie.mp4'
            },
            {
                name: 'Alex Ray',
                topic: 'Machine Learning',
                video: 'https://www.w3schools.com/html/mov_bbb.mp4'
            },
            {
                name: 'Sara Kim',
                topic: 'Web Dev',
                video: 'https://www.w3schools.com/html/movie.mp4'
            },
            {
                name: 'Alex Ray',
                topic: 'Machine Learning',
                video: 'https://www.w3schools.com/html/mov_bbb.mp4'
            },
            {
                name: 'Sara Kim',
                topic: 'Web Dev',
                video: 'https://www.w3schools.com/html/movie.mp4'
            },
            {
                name: 'Alex Ray',
                topic: 'Machine Learning',
                video: 'https://www.w3schools.com/html/mov_bbb.mp4'
            },
            {
                name: 'Sara Kim',
                topic: 'Web Dev',
                video: 'https://www.w3schools.com/html/movie.mp4'
            },
            {
                name: 'Alex Ray',
                topic: 'Machine Learning',
                video: 'https://www.w3schools.com/html/mov_bbb.mp4'
            },
            {
                name: 'Sara Kim',
                topic: 'Web Dev',
                video: 'https://www.w3schools.com/html/movie.mp4'
            },
            {
                name: 'Alex Ray',
                topic: 'Machine Learning',
                video: 'https://www.w3schools.com/html/mov_bbb.mp4'
            },
            {
                name: 'Sara Kim',
                topic: 'Web Dev',
                video: 'https://www.w3schools.com/html/movie.mp4'
            },
        ];

        const room = document.getElementById('studyRoom');

        // Show shimmer first
        for (let i = 0; i < cardsData.length; i++) {
            const shimmerCard = document.createElement('div');
            shimmerCard.className = 'study-card';
            shimmerCard.innerHTML = `
        <div class="card-header shimmer"></div>
        <div class="card-body shimmer" style="height: 100px;"></div>
      `;
            room.appendChild(shimmerCard);
        }

        // Replace shimmer with real data
        setTimeout(() => {
            room.innerHTML = '';
            cardsData.forEach(user => {
                const card = document.createElement('div');
                card.className = 'study-card';
                card.innerHTML = `
          <div class="card-header">
            <video autoplay muted loop>
              <source src="${user.video}" type="video/mp4">
            </video>
            <div class="live-dot"></div>
          </div>
          <div class="card-body">
            <h5>${user.name}</h5>
            <p>Focusing on ${user.topic}</p>
          </div>
          <div class="emoji-bar">
            <button onclick="showEmoji(this, '🔥')">🔥</button>
            <button onclick="showEmoji(this, '❤️')">❤️</button>
            <button onclick="showEmoji(this, '😂')">😂</button>
          </div>
          <div class="options-menu">
            <button class="three-dot" onclick="toggleOptions(this)"><i class="fas fa-ellipsis-v"></i></button>
            <div class="options-dropdown">
              <a href="#">⭐ Rate</a>
            <a href="#" data-bs-toggle="modal" data-bs-target="#reportModal">🚩 Report</a>

              <a href="#">👤 Follow</a>
            </div>
          </div>
        `;
                room.appendChild(card);
            });
        }, 1500);

        function showEmoji(button, emoji) {
            const floatEmoji = document.createElement('div');
            floatEmoji.className = 'emoji-float';
            floatEmoji.innerText = emoji;
            button.parentElement.parentElement.appendChild(floatEmoji);
            setTimeout(() => floatEmoji.remove(), 1000);
        }

        function toggleOptions(btn) {
            const dropdown = btn.nextElementSibling;
            dropdown.style.display = dropdown.style.display === 'flex' ? 'none' : 'flex';
        }

        function showReportPopup() {
            alert("Report popup can go here with form and reason selection.");
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('reportForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const reason = document.getElementById('reason').value;
            const details = document.getElementById('details').value;
            alert(`Report Submitted!\nReason: ${reason}\nDetails: ${details || 'N/A'}`);
            const modal = bootstrap.Modal.getInstance(document.getElementById('reportModal'));
            modal.hide();
            this.reset();
        });
    </script>

</body>

</html>



<-- -------------------------------------------------------------------- -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Study Room</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #0d1117;
      font-family: 'Segoe UI', sans-serif;
    }

    .study-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(270px, 1fr));
      gap: 20px;
      padding: 40px;
      justify-content: center;
    }

    .study-card {
      width: 270px;
      border-radius: 15px;
      overflow: hidden;
      background-color: #1c1f26;
      color: white;
      position: relative;
      box-shadow: 0 4px 12px rgba(0,0,0,0.6);
      transition: transform 0.3s ease-in-out, box-shadow 0.3s;
    }

    .study-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 20px rgba(255, 255, 255, 0.1);
    }

    .video-section {
      position: relative;
      height: 200px;
      background-color: #2c2f36;
    }

    video {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 15px 15px 0 0;
    }

    .top-icons {
      position: absolute;
      top: 8px;
      left: 8px;
      display: flex;
      gap: 6px;
      align-items: center;
      background: rgba(0, 0, 0, 0.4);
      padding: 4px 8px;
      border-radius: 12px;
      font-size: 14px;
    }

    .notification-badge {
      position: absolute;
      top: 8px;
      right: 8px;
      background-color: #ff5722;
      color: white;
      font-size: 14px;
      border-radius: 50%;
      width: 24px;
      height: 24px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;
    }

    .emoji-only {
      position: absolute;
      bottom: 48px;
      left: 10px;
      background: #3b3f46;
      padding: 4px 8px;
      border-radius: 8px;
      font-size: 16px;
      cursor: pointer;
      transition: transform 0.2s ease-in-out;
    }

    .emoji-only:hover {
      transform: scale(1.1);
    }

    @keyframes floatUp {
      0% { transform: translateY(0); opacity: 1; }
      100% { transform: translateY(-60px); opacity: 0; }
    }

    .floating-emoji {
      position: absolute;
      bottom: 48px;
      left: 10px;
      font-size: 20px;
      animation: floatUp 1s ease-out forwards;
    }

    .status-msg {
      background: #263238;
      padding: 8px 12px;
      text-align: center;
      font-size: 13px;
      border-bottom-left-radius: 15px;
      border-bottom-right-radius: 15px;
    }
  </style>
</head>
<body>

  <div class="study-grid" id="studyGrid"></div>

  <!-- Bootstrap Icons -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

  <script>
    function createCard(id) {
      return `
        <div class="study-card">
          <div class="video-section">
            <video id="video-${id}" autoplay playsinline></video>

            <!-- Top-left view count -->
            <div class="top-icons">
              <i class="bi bi-eye-fill"></i> <span>43</span>
            </div>

            <!-- Top-right badge -->
            <div class="notification-badge">25</div>

            <!-- Bottom-left emoji -->
            <div class="emoji-only" onclick="showReaction(this)">😊</div>
          </div>

          <!-- Status Message -->
          <div class="status-msg">
            Do what you can, with what you have :)
          </div>
        </div>
      `;
    }

    function showReaction(elem) {
      const emoji = document.createElement('div');
      emoji.className = 'floating-emoji';
      emoji.textContent = '😊';

      elem.parentElement.appendChild(emoji);

      setTimeout(() => {
        emoji.remove();
      }, 1000);
    }

    function startCamera(videoId) {
      navigator.mediaDevices.getUserMedia({ video: true })
        .then(stream => {
          document.getElementById(videoId).srcObject = stream;
        })
        .catch(error => console.error('Error accessing webcam:', error));
    }

    function loadStudyCards(count) {
      const grid = document.getElementById('studyGrid');
      for (let i = 1; i <= count; i++) {
        grid.innerHTML += createCard(i);
      }

      for (let i = 1; i <= count; i++) {
        startCamera(`video-${i}`);
      }
    }

    loadStudyCards(4); // Change this number to add more study cards
  </script>

</body>
</html>



<-- ----------------------------------------------------- --> 
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Study Room Enhanced</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <!-- CSS IMPLEMENTATION -->
    @vite(['resources/css/style.css'])
    @vite(['resources/css/live-stydy-group.css'])


</head>


<body>

    <!-- Top Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
        <div class="container">
            <a class="navbar-brand" href="#">BrainWave</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item"><a class="nav-link active" href="{{ route('index') }}">Home</a></li>
                    <li class="nav-item"><a class="nav-link" href="{{ route('features') }}">Features</a></li>
                    <li class="nav-item"><a class="nav-link" href="">Explore</a></li>
                    <li class="nav-item"><a class="nav-link" href="#contact">Contact</a></li>
                </ul>
                <button id="theme-toggle" class="btn btn-outline-light ms-3">
                    <i id="theme-icon" class="fas fa-moon"></i>
                </button>
                <a href="{{ route('studyRoom') }}" class="btn btn-join ms-3">Join Now</a>
            </div>
        </div>
    </nav>

    <!-- Second Nav -->
    <nav class="navbar navbar-expand-lg container navbar-light navbar-custom px-3 py-2 position-relative mt-5 pt-4">
        <div class="container-fluid d-flex justify-content-between align-items-center">

            <!-- Left -->
            <div class="d-flex align-items-center gap-2">
                <button class="btn btn-primary btn-sm btn-rounded" data-bs-toggle="modal" data-bs-target="#confirmFinishModal">
                    Finish session
                </button>

                <div class="d-flex align-items-center gap-2">
                    <span class="avatar-circle"></span>
                    <span class="user-badge">YOU GUEST</span>
                    <i id="video-icon" class="fas fa-video-slash text-muted" onclick="toggleCamera(this)" style="cursor:pointer"></i>
                </div>
            </div>

            <!-- Pagination -->
            <div class="pagination-center">
                <span class="pagination-control" onclick="changePage(-1)">&laquo;</span>
                <span id="page-info">1 / 2</span>
                <span class="pagination-control" onclick="changePage(1)">&raquo;</span>
            </div>

            <!-- Right -->
            <div class="d-flex align-items-center gap-2">
                <button class="nav-icon-btn"><i class="fas fa-bolt"></i></button>
                <button class="nav-icon-btn"><i class="far fa-clock"></i></button>
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#authModal">Login</button>
                <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#authModal">Register</button>

                <div class="d-flex align-items-center icon-box-group ms-3">
                    <i class="fas fa-users"></i><span class="ms-1" id="userCount">0</span>
                </div>
            </div>
        </div>
    </nav>

    <!-- Study Cards Grid -->
    <div class="study-grid container" id="studyGrid"></div>

    <!-- Finish Modal -->
    <div class="modal fade" id="confirmFinishModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-dark text-white">
                <div class="modal-header border-0">
                    <h5 class="modal-title">Finish Session?</h5>
                </div>
                <div class="modal-body">Are you sure you want to finish the session?</div>
                <div class="modal-footer border-0">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <a href="/" class="btn btn-danger">Close</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Auth Modal -->
    <div class="modal fade" id="authModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-transparent border-0">
                <div class="modal-body p-0">
                    <div class="glass-card">
                        <h3 id="formTitle">Welcome Back 👋</h3>
                        <div class="toggle-btns">
                            <button id="loginBtn" class="active" onclick="switchForm('login')">Login</button>
                            <button id="signupBtn" onclick="switchForm('signup')">Sign Up</button>
                        </div>
                        <form id="authForm">
                            <div class="mb-3" id="signupField" style="display: none;">
                                <input type="text" class="form-control" placeholder="Full Name">
                            </div>
                            <div class="mb-3">
                                <input type="email" class="form-control" placeholder="Email" required>
                            </div>
                            <div class="mb-3">
                                <input type="password" class="form-control" placeholder="Password" required>
                            </div>
                            <button class="btn btn-custom" type="submit">Continue</button>
                        </form>
                        <div class="divider"><span>or</span></div>
                        <div class="g_id_signin" data-type="standard" data-shape="pill" data-theme="filled_blue"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://accounts.google.com/gsi/client" async defer></script>
    <script>
        let currentPage = 1;
        const cardsPerPage = 8;
        const totalUsers = 15;
        document.getElementById("userCount").textContent = totalUsers;

        function switchForm(type) {
            const title = document.getElementById("formTitle");
            const signup = document.getElementById("signupField");
            document.getElementById("loginBtn").classList.toggle("active", type === "login");
            document.getElementById("signupBtn").classList.toggle("active", type === "signup");
            title.innerText = type === "signup" ? "Create an Account 🚀" : "Welcome Back 👋";
            signup.style.display = type === "signup" ? "block" : "none";
        }

        const statusOptions = ["Studying ⏳", "On Break ☕", "Reviewing 📚", "Focused 🔥"];

        function createCard(id) {
            const status = statusOptions[Math.floor(Math.random() * statusOptions.length)];
            return `
        <div class="study-card">
          <div class="video-section">
            <video id="video-${id}" autoplay muted playsinline></video>
            <div class="status-badge">${status}</div>
            <div class="notification-badge">25</div>
            <div class="three-dot" onclick="toggleActions(this)">⋮</div>
            <div class="hover-actions">
              <button>Rate</button><button>Follow</button><button>Report</button>
            </div>
            <div class="top-hover-icons">
              <div>🔖</div><div>💬</div><div>📒</div><div>🎖️</div>
            </div>
            <div class="emoji-reactions visible">
              <div class="emoji-btn" onclick="showReaction(this, '✨')">✨</div>
              <div class="emoji-btn" onclick="showReaction(this, '❤️')">❤️</div>
              <div class="emoji-btn" onclick="showReaction(this, '😂')">😂</div>
              <div class="emoji-btn" onclick="showReaction(this, '🔥')">🔥</div>
            </div>
            <div class="bottom-hover-info"><img src="https://i.pravatar.cc/150?img=${id}" alt="User"><span>User ${id}</span></div>
          </div>
          <div class="status-msg" onmouseover="toggleBottomHover(this,true)" onmouseout="toggleBottomHover(this,false)">
            Stay focused, stay awesome! 💪
          </div>
        </div>`;
        }

        function loadStudyCards(page) {
            const grid = document.getElementById('studyGrid');
            grid.innerHTML = '';
            const start = (page - 1) * cardsPerPage + 1;
            const end = Math.min(start + cardsPerPage - 1, totalUsers);
            for (let i = start; i <= end; i++) {
                grid.innerHTML += createCard(i);
            }
            for (let i = start; i <= end; i++) {
                startCamera(`video-${i}`);
            }
        }

        function changePage(dir) {
            const maxPage = Math.ceil(totalUsers / cardsPerPage);
            currentPage += dir;
            if (currentPage < 1) currentPage = 1;
            if (currentPage > maxPage) currentPage = maxPage;
            loadStudyCards(currentPage);
            document.getElementById("page-info").textContent = `${currentPage} / ${maxPage}`;
        }

        function startCamera(id) {
            navigator.mediaDevices.getUserMedia({
                    video: true
                })
                .then(stream => {
                    document.getElementById(id).srcObject = stream;
                }).catch(err => console.warn(err));
        }

        function toggleBottomHover(el, on) {
            const card = el.closest('.study-card');
            const emoji = card.querySelector('.emoji-reactions');
            const info = card.querySelector('.bottom-hover-info');
            emoji.classList.toggle('hidden', on);
            emoji.classList.toggle('visible', !on);
            info.style.display = on ? 'flex' : 'none';
        }

        function showReaction(el, emojiChar) {
            const emoji = document.createElement('div');
            emoji.className = 'floating-emoji';
            emoji.textContent = emojiChar;
            const parent = el.closest('.video-section');
            emoji.style.left = (el.offsetLeft + 5) + 'px';
            parent.appendChild(emoji);
            setTimeout(() => emoji.remove(), 1000);
        }

        function toggleActions(dot) {
            dot.classList.toggle('active');
        }

        function toggleCamera(el) {
            el.classList.toggle("fa-video-slash");
            el.classList.toggle("fa-video");
            el.classList.toggle("text-muted");
            el.classList.toggle("text-success");
        }

        document.getElementById('theme-toggle').addEventListener('click', () => {
            const html = document.documentElement;
            const currentTheme = html.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            html.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            document.getElementById('theme-icon').className = newTheme === 'dark' ? 'fas fa-sun' : 'fas fa-moon';
        });

        window.addEventListener('DOMContentLoaded', () => {
            const theme = localStorage.getItem('theme') || 'light';
            document.documentElement.setAttribute('data-theme', theme);
            document.getElementById('theme-icon').className = theme === 'dark' ? 'fas fa-sun' : 'fas fa-moon';
            loadStudyCards(currentPage);
        });
    </script>
</body>

</html>




/////////////////////////////////////////////////////////////////////////////////

    <script>
        // let currentPage = 1;
        // const cardsPerPage = 8;
        // const totalUsers = 20;
        // document.getElementById("userCount").textContent = totalUsers;

        // function switchForm(type) {
        //     const title = document.getElementById("formTitle");
        //     const signup = document.getElementById("signupField");
        //     document.getElementById("loginBtn").classList.toggle("active", type === "login");
        //     document.getElementById("signupBtn").classList.toggle("active", type === "register");
        //     title.innerText = type === "register" ? "Create an Account 🚀" : "Welcome Back 👋";
        //     signup.style.display = type === "register" ? "block" : "none";
        // }

        // const statusOptions = ["Studying ⏳", "On Break ☕", "Reviewing 📚", "Focused 🔥"];

        // function createCard(id) {
        //     const status = statusOptions[Math.floor(Math.random() * statusOptions.length)];
        //     return `
        //         <div class="study-card">
        //         <div class="video-section">
        //             <video id="video-${id}" autoplay muted playsinline></video>
        //             <div class="status-badge">${status}</div>
        //             <div class="notification-badge">25</div>
        //             <div class="three-dot" onclick="toggleActions(this)">⋮</div>
        //             <div class="hover-actions">
        //             <button>Rate</button><button>Follow</button><button>Report</button>
        //             </div>
        //             <div class="top-hover-icons">
        //                 <div>🔖</div><div>💬</div><div>📒</div><div>🎖️</div>
        //             </div>
        //             <div class="emoji-reactions visible">
        //                 <div class="emoji-btn" onclick="showReaction(this, '✨')">✨</div>
        //                 <div class="emoji-btn" onclick="showReaction(this, '❤️')">❤️</div>
        //                 <div class="emoji-btn" onclick="showReaction(this, '😂')">😂</div>
        //                 <div class="emoji-btn" onclick="showReaction(this, '🔥')">🔥</div>
        //             </div>
        //             <div class="bottom-hover-info"><img src="https://i.pravatar.cc/150?img=${id}" alt="User"><span>User ${id}</span></div>
        //         </div>
        //             <div class="status-msg" onmouseover="toggleBottomHover(this,true)" onmouseout="toggleBottomHover(this,false)">
        //                 Stay focused, stay awesome! 💪
        //             </div>
        //         </div>`;
        //         }

        // function loadStudyCards(page) {
        //     const grid = document.getElementById('studyGrid');
        //     grid.innerHTML = '';
        //     const start = (page - 1) * cardsPerPage + 1;
        //     const end = Math.min(start + cardsPerPage - 1, totalUsers);
        //     for (let i = start; i <= end; i++) {
        //         grid.innerHTML += createCard(i);
        //     }
        //     for (let i = start; i <= end; i++) {
        //         startCamera(`video-${i}`);
        //     }
        // }

        function changePage(dir) {
            const maxPage = Math.ceil(totalUsers / cardsPerPage);
            currentPage += dir;
            if (currentPage < 1) currentPage = 1;
            if (currentPage > maxPage) currentPage = maxPage;
            loadStudyCards(currentPage);
            document.getElementById("page-info").textContent = `${currentPage} / ${maxPage}`;
        }

        function startCamera(id) {
            // Skip starting camera for YOU GUEST (video-1)
            if (id === 'video-1') return;

            navigator.mediaDevices.getUserMedia({
                    video: true
                })
                .then(stream => {
                    document.getElementById(id).srcObject = stream;
                }).catch(err => console.warn(err));
        }


        // function toggleBottomHover(el, on) {
        //     const card = el.closest('.study-card');
        //     const emoji = card.querySelector('.emoji-reactions');
        //     const info = card.querySelector('.bottom-hover-info');
        //     emoji.classList.toggle('hidden', on);
        //     emoji.classList.toggle('visible', !on);
        //     info.style.display = on ? 'flex' : 'none';
        // }

        // function showReaction(el, emojiChar) {
        //     const emoji = document.createElement('div');
        //     emoji.className = 'floating-emoji';
        //     emoji.textContent = emojiChar;
        //     const parent = el.closest('.video-section');
        //     emoji.style.left = (el.offsetLeft + 5) + 'px';
        //     parent.appendChild(emoji);
        //     setTimeout(() => emoji.remove(), 1000);
        // }

        function toggleActions(dot) {
            dot.classList.toggle('active');
        }

        document.getElementById('theme-toggle').addEventListener('click', () => {
            const html = document.documentElement;
            const currentTheme = html.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            html.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            document.getElementById('theme-icon').className = newTheme === 'dark' ? 'fas fa-moon' : 'fas fa-sun';
        });

        window.addEventListener('DOMContentLoaded', () => {
            const theme = localStorage.getItem('theme') || 'light';
            document.documentElement.setAttribute('data-theme', theme);
            document.getElementById('theme-icon').className = theme === 'dark' ? 'fas fa-sun' : 'fas fa-sun';
            loadStudyCards(currentPage);
        });
    </script>



    ////////////////////////////////////////////////////////////////////////////////////////////
    <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Study Room Enhanced</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <meta name="csrf-token" content="{{ csrf_token() }}">

    <!-- CSS IMPLEMENTATION -->
    @vite(['resources/css/style.css'])
    @vite(['resources/css/live-stydy-group.css'])



</head>


<body>

    <!-- Top Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
        <div class="container">
            <a class="navbar-brand" href="#">BrainWave</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item"><a class="nav-link active" href="{{ route('index') }}">Home</a></li>
                    <li class="nav-item"><a class="nav-link" href="{{ route('features') }}">Features</a></li>
                    <li class="nav-item"><a class="nav-link" href="">Explore</a></li>
                    <li class="nav-item"><a class="nav-link" href="#contact">Contact</a></li>
                </ul>
                <button id="theme-toggle" class="btn btn-outline-light ms-3">
                    <i id="theme-icon" class="fas fa-moon"></i>
                </button>
                <!-- <a href="{{ route('studyRoom') }}" class="btn btn-join ms-3">Join Now</a> -->
                @guest
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#authModal" style="margin-left: 10px;">Login</button>
                @endguest
            </div>
        </div>
    </nav>

    <!-- Second Nav Bar-->
    <nav class="navbar navbar-expand-lg container navbar-light navbar-custom px-3 py-2 position-relative mt-6 pt-3">
        <div class="container-fluid d-flex justify-content-between align-items-center">

            <!-- Left -->
            <div class="d-flex align-items-center gap-2">
                <div class="d-flex align-items-center gap-2">


                    <span class="dp-wrapper" id="profileImageTrigger">
                        @auth
                        <img src="{{ Auth::user()->profile_image }}" alt="{{ Auth::user()->name }}" class="rounded-circle" width="50">
                        @else
                        <img src="{{ asset('image/profileImage.png') }}" alt="Guest" class="rounded-circle" width="50" data-bs-toggle="modal" data-bs-target="#authModal">
                        @endauth
                    </span>



                    @auth
                    <div id="profileSidebar" class="profile-sidebar">
                        <div class="profile-card">
                            <div class="card-body">
                                <span class="close-btn" style="margin-left: 200px; margin-top: -14px;" id="closeSidebar">&times;</span>

                                <div class="d-flex img-info" style="margin-bottom: .5rem;">

                                    <!-- <img src="{{ asset('image/bg.jpg') }}" alt="Profile" class="profile-img mb-2"> -->

                                    <span class="dp-wrapper" id="profileImageTrigger">
                                        @auth
                                        <img src="{{ Auth::user()->profile_image }}" alt="{{ Auth::user()->name }}" class="rounded-circle" width="50">
                                        @else
                                        <img src="{{ asset('image/profileImage.png') }}" alt="Guest" class="rounded-circle" width="50">
                                        @endauth
                                    </span>
                                    <h5>
                                        @auth
                                        {{ Auth::user()->name }}
                                        @else
                                        You Guest
                                        @endauth
                                    </h5>

                                </div>

                                <div class="profile-options">
                                    <a href="{{ route(('profile.view')) }}"><i class="fas fa-user"></i> View Profile</a>
                                    <a href="#"><i class="fas fa-chart-line"></i> See Your Status</a>
                                </div>

                                <div class="profile-divider"></div>

                                <div class="profile-options">
                                    <a href="#"><i class="fas fa-user-shield"></i> Privacy Settings</a>
                                    <a href="#"><i class="fas fa-cogs"></i> Account Settings</a>
                                </div>

                                <div class="profile-divider"></div>

                                <!-- <div class="profile-options">
                                    <a href="#"><i class="fas fa-sign-out-alt"></i> Logout</a>
                                </div> -->

                                @auth
                                <form action="{{ route('logout') }}" method="POST" style="display:inline;">
                                    @csrf
                                    <div class="profile-options">
                                        <!-- <a href="#"><i class="fas fa-sign-out-alt"></i> Logout</a> -->
                                        <button type="submit" class="btn btn-danger "><i class="fas fa-sign-out-alt"></i> Logout</button>
                                    </div>

                                </form>
                                @endauth

                            </div>
                        </div>
                    </div>
                    @endauth

                    <!-- Fetch User Name after Login -->
                    <span id="user-name-display" class="text-white bg-primary fw-bold px-3 py-1 rounded me-3">
                        @auth
                        {{ Auth::user()->name }}
                        @else
                        You Guest
                        @endauth
                    </span>

                    <!-- Cemera which toggle ON/OFF for Live Study -->
                    <i id="video-icon" class="fas fa-video-slash text-muted" onclick="toggleCamera(this)" style="cursor:pointer"></i>
                </div>
            </div>

            <!-- Pagination -->
            <div class="pagination-center">
                <span class="pagination-control" onclick="changePage(-1)">&laquo;</span>
                <span id="page-info">1 / 1</span>
                <span class="pagination-control" onclick="changePage(1)">&raquo;</span>
            </div>

            <!-- Right -->
            <div class="d-flex align-items-center gap-2">
                <button class="nav-icon-btn"><i class="fas fa-bolt"></i></button>

                <!-- <button class="nav-icon-btn"><i class="far fa-clock"></i></button> -->
                <button class="nav-icon-btn" style="position: relative; padding: 0; border: none; background: transparent;">
                    <div class="clock-container" style="width: 40px; height: 40px;">
                        <canvas id="canvas" width="35" height="35"></canvas>
                        <div class="digital-popup" id="digitalTime">00:00:00</div>
                    </div>
                </button>


                <!-- <button class="btn btn-primary btn-sm btn-rounded">Join Live Room</button>
                <button class="btn btn-primary btn-sm btn-rounded" data-bs-toggle="modal" data-bs-target="#confirmFinishModal">End Live</button> -->

                @if(Auth::check())
                <button id="joinLiveBtn" class="btn btn-primary">Join Live Room</button>
                @else
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#authModal">Login to Join Live</button>
                @endif

                <button id="confirmEndBtn" type="button" class="btn btn-danger" data-bs-dismiss="modal">End Now</button>



                <!-- <div id="videoContainer" class="mt-3"></div> -->

                <!-- Confirm End Modal -->
                <div class="modal fade" id="confirmFinishModal" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content text-start">
                            <div class="modal-header">
                                <h5 class="modal-title">End Live Session?</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to end your live session?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button id="confirmEndBtn" type="button" class="btn btn-danger" data-bs-dismiss="modal">End Now</button>
                            </div>
                        </div>
                    </div>
                </div>





                <div class="d-flex align-items-center icon-box-group ms-3">
                    <i class="fas fa-users"></i><span class="ms-1" id="userCount">lbl-decor0</span>
                </div>
            </div>
        </div>
    </nav>

    <!-- Study Cards Grid -->
    <div class="study-grid container" id="studyGrid"></div>

    <!-- Finish Modal -->
    <!-- <div class="modal fade" id="confirmFinishModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-primary text-white">
                <div class="modal-header border-0">
                    <h5 class="modal-title">End Live?</h5>
                </div>
                <div class="modal-body">Are you sure you want to stop your live?</div>
                <div class="modal-footer border-0">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <a href="/" class="btn btn-danger">Close</a>
                </div>
            </div>
        </div>
    </div> -->


    <!-- Auth Modal -->
    <div class="modal fade" id="authModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-transparent border-0">
                <div class="modal-body p-0">
                    <div class="glass-card">

                        <h3 id="formTitle">Welcome Back 👋</h3>

                        <div class="toggle-btns">
                            <button id="loginBtn" class="active" onclick="switchForm('login')">Login</button>
                            <button id="signupBtn" onclick="switchForm('register')">Register</button>
                        </div>


                        <a href="{{ route('google.login') }}" class="btn btn-danger w-100 mt-3">
                            <i class="fab fa-google me-2"></i> Continue with Google
                        </a>

                        <div class="divider"><span>or</span></div>


                        <div id="loginForm" style="display: block;">
                            <form method="POST" action="{{ route('login') }}">
                                @csrf

                                <div class="mb-2">
                                    <label for="loginEmail" class="form-label lbl-decor3">Email</label>
                                    <input type="email" name="email" id="loginEmail" class="form-control" placeholder="Enter your email" required>
                                </div>

                                <div class="mb-2">
                                    <label for="loginPassword" class="form-label lbl-decor">Password</label>
                                    <input type="password" name="password" id="loginPassword" class="form-control" placeholder="Enter your password" required>
                                </div>

                                <button type="submit" class="btn btn-primary w-100">Login</button>

                                <p class="mt-2 text-center">
                                    Don't have an account?
                                    <a href="#" onclick="switchForm('register')" style="color: orange;">Register</a>
                                </p>

                                @if (session('status'))
                                <div class="alert alert-success mt-2">{{ session('status') }}</div>
                                @endif

                                @if ($errors->any())
                                <div class="alert alert-danger mt-2">{{ $errors->first() }}</div>
                                @endif
                            </form>
                        </div>

                        <!-- Registration Form -->
                        <div id="registerForm" style="display: none;">
                            <form method="POST" action="{{ route('register') }}">
                                @csrf
                                <div class="mb-1">
                                    <label for="registerName" class="form-label lbl-decor">Name</label>
                                    <input type="text" name="name" id="registerName" class="form-control" required>
                                </div>

                                <div class="mb-1">
                                    <label for="registerEmail" class="form-label lbl-decor3">Email</label>
                                    <input type="email" name="email" id="registerEmail" class="form-control" required>
                                </div>

                                <div class="mb-1">
                                    <label for="registerPassword" class="form-label lbl-decor">Password</label>
                                    <input type="password" name="password" id="registerPassword" class="form-control" required>
                                </div>

                                <div class="mb-1">
                                    <label for="password_confirmation" class="form-label lbl-decor2">Confirm Password</label>
                                    <input type="password" name="password_confirmation" id="password_confirmation" class="form-control" required>
                                </div>

                                <button type="submit" class="btn btn-success w-100">Register</button>

                                <p class="mt-1 text-center">
                                    Already have an account?
                                    <a href="#" onclick="switchForm('login')" style="color: orange;">Login</a>
                                </p>

                                @if (session('status'))
                                <div class="alert alert-success mt-2">{{ session('status') }}</div>
                                @endif

                                @if ($errors->any())
                                <div class="alert alert-danger mt-2">{{ $errors->first() }}</div>
                                @endif
                            </form>

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="videoContainer" class="container" style="width: 30%; margin-left:100px; margin-top:-10;"></div>

    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- |                 J A V A     S C R I P T                           | -->
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://accounts.google.com/gsi/client" async defer></script>

    <script>
        function changePage(dir) {
            const maxPage = Math.ceil(totalUsers / cardsPerPage);
            currentPage += dir;
            if (currentPage < 1) currentPage = 1;
            if (currentPage > maxPage) currentPage = maxPage;
            loadStudyCards(currentPage);
            document.getElementById("page-info").textContent = `${currentPage} / ${maxPage}`;
        }

        function startCamera(id) {
            // Skip starting camera for YOU GUEST (video-1)
            if (id === 'video-1') return;

            navigator.mediaDevices.getUserMedia({
                    video: true
                })
                .then(stream => {
                    document.getElementById(id).srcObject = stream;
                }).catch(err => console.warn(err));
        }

        function toggleActions(dot) {
            dot.classList.toggle('active');
        }

        document.getElementById('theme-toggle').addEventListener('click', () => {
            const html = document.documentElement;
            const currentTheme = html.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            html.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            document.getElementById('theme-icon').className = newTheme === 'dark' ? 'fas fa-moon' : 'fas fa-sun';
        });

        window.addEventListener('DOMContentLoaded', () => {
            const theme = localStorage.getItem('theme') || 'light';
            document.documentElement.setAttribute('data-theme', theme);
            document.getElementById('theme-icon').className = theme === 'dark' ? 'fas fa-sun' : 'fas fa-sun';
            loadStudyCards(currentPage);
        });
    </script>

    <!-- login and registration form toggle -->
    <script>
        function switchForm(type) {
            const loginForm = document.getElementById("loginForm");
            const registerForm = document.getElementById("registerForm");
            const title = document.getElementById("formTitle");

            document.getElementById("loginBtn").classList.toggle("active", type === "login");
            document.getElementById("signupBtn").classList.toggle("active", type === "register");

            title.innerText = type === "register" ? "Create an Account 🚀" : "Welcome Back 👋";
            loginForm.style.display = type === "login" ? "block" : "none";
            registerForm.style.display = type === "register" ? "block" : "none";
        }
    </script>


    <script>
        function handleLoginSuccess(user) {
            document.getElementById('user-name-display').innerText = user.name;
            document.getElementById('loginBtn').style.display = 'none';

            // If using logout button in frontend JS, show it now
            document.getElementById('logoutBtn').style.display = 'inline-block';
        }

        $.ajax({
            url: '/login',
            method: 'POST',
            data: formData,
            success: function(response) {
                if (response.status === 'success') {
                    handleLoginSuccess(response.user);
                    $('#loginModal').modal('hide');
                } else {
                    alert(response.message);
                }
            }
        });
    </script>

    <!-- side nav bar for Profile -->

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const trigger = document.getElementById('profileImageTrigger');
            const sidebar = document.getElementById('profileSidebar');
            const closeBtn = document.getElementById('closeSidebar');

            if (trigger && sidebar && closeBtn) {
                trigger.addEventListener('click', function(e) {
                    sidebar.classList.add('active');
                });

                closeBtn.addEventListener('click', function() {
                    sidebar.classList.remove('active');
                });

                // Click outside sidebar to close
                document.addEventListener('click', function(e) {
                    if (!sidebar.contains(e.target) && !trigger.contains(e.target)) {
                        sidebar.classList.remove('active');
                    }
                });
            }
        });
    </script>

    <!-- clock JS -->
    <script>
        const canvas = document.getElementById("canvas");
        const ctx = canvas.getContext("2d");
        let radius = canvas.height / 2;
        ctx.translate(radius, radius);
        radius *= 0.90;

        function drawClock() {
            ctx.clearRect(-canvas.width, -canvas.height, canvas.width * 2, canvas.height * 2);
            drawFace(ctx, radius);
            drawTime(ctx, radius);
        }

        function drawFace(ctx, radius) {
            ctx.beginPath();
            ctx.arc(0, 0, radius, 0, 2 * Math.PI);
            ctx.fillStyle = '#ffffff';
            ctx.fill();

            ctx.lineWidth = 2.5;
            ctx.strokeStyle = '#000000';
            ctx.stroke();

            ctx.beginPath();
            ctx.arc(0, 0, radius * 0.05, 0, 2 * Math.PI);
            ctx.fillStyle = '#000';
            ctx.fill();
        }

        function drawTime(ctx, radius) {
            const now = new Date();
            let hour = now.getHours();
            let minute = now.getMinutes();
            let second = now.getSeconds();

            hour %= 12;
            hour = (hour * Math.PI / 6) +
                (minute * Math.PI / (6 * 60)) +
                (second * Math.PI / (360 * 60));
            drawHand(ctx, hour, radius * 0.45, 2.7);

            minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));
            drawHand(ctx, minute, radius * 0.7, 2);

            second = (second * Math.PI / 30);
            drawHand(ctx, second, radius * 0.85, 1.5);
        }

        function drawHand(ctx, pos, length, width) {
            ctx.beginPath();
            ctx.lineWidth = width;
            ctx.lineCap = "round";
            ctx.moveTo(0, 0);
            ctx.rotate(pos);
            ctx.lineTo(0, -length);
            ctx.strokeStyle = "#000";
            ctx.stroke();
            ctx.rotate(-pos);
        }

        function updateDigitalClock() {
            const now = new Date();
            const digitalTime = document.getElementById("digitalTime");
            const h = String(now.getHours()).padStart(2, '0');
            const m = String(now.getMinutes()).padStart(2, '0');
            const s = String(now.getSeconds()).padStart(2, '0');
            digitalTime.innerText = `${h}:${m}:${s}`;
        }

        setInterval(() => {
            drawClock();
            updateDigitalClock();
        }, 1000);
    </script>

    <!-- <script>
    function showAlert() {
        alert("Check email to Verify Account for Registration");
        return true;
    }
</script> -->

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const registerForm = document.querySelector('#registerForm form');

            registerForm.addEventListener('submit', function(e) {
                if (registerForm.checkValidity()) {
                    alert("Check email to Verify Account by Clicking Link");
                }
            });
        });
    </script>


    <!-- <script>
        const joinBtn = document.getElementById('joinLiveBtn');
        const endBtn = document.getElementById('endLiveBtn');
        const videoContainer = document.getElementById('videoContainer');
        let stream;

        async function markLiveStatus(status) {
            const endpoint = status === 'start' ? '/live-session/start' : '/live-session/end';

            try {
                const response = await fetch(endpoint, {
                    method: 'POST',
                    headers: {
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content,
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();
                console.log('Server response:', result);
            } catch (err) {
                console.error('Error updating live status:', err);
            }
        }

        joinBtn?.addEventListener('click', async (e) => {
            e.preventDefault();
            console.log("Join button clicked");

            try {
                stream = await navigator.mediaDevices.getUserMedia({
                    video: true,
                    audio: false
                });

                const video = document.createElement('video');
                video.srcObject = stream;
                video.autoplay = true;
                video.muted = true;
                video.classList.add('rounded', 'shadow', 'border');
                video.style.width = "60%";

                videoContainer.innerHTML = '';
                videoContainer.appendChild(video);

                joinBtn.classList.add('d-none');
                endBtn.classList.remove('d-none');

                await markLiveStatus('start');
            } catch (error) {
                alert("Camera permission required to go live.");
                console.error(error);
            }
        });

        document.getElementById('confirmEndBtn')?.addEventListener('click', async () => {
            if (stream) {
                stream.getTracks().forEach(track => track.stop());
                videoContainer.innerHTML = '';
            }

            joinBtn.classList.remove('d-none');
            endBtn.classList.add('d-none');

            await markLiveStatus('end');
        });
    </script> -->


    <script>

async function startLiveSession() {
    try {
        const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });
        const video = document.createElement('video');
        video.srcObject = stream;
        video.autoplay = true;
        video.muted = true; // Mute the user's own video
        video.classList.add('rounded', 'shadow', 'border');
        document.getElementById('videoContainer').appendChild(video);
        
        // Store the stream for later use
        window.localStream = stream;

        // Send the stream to the backend to broadcast to others
        await joinRoom();
    } catch (err) {
        console.error('Error accessing camera/microphone: ', err);
        alert("Please grant access to your camera and microphone.");
    }
}
</script>



</body>

</html>